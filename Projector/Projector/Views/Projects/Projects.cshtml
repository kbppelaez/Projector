@using System.Globalization;
@model ProjectsListViewModel

@{
    ViewData["Title"] = "Home Page";
    Layout = "_Authenticated";
}

<div class="flex flex-col w-full space-y-4">
    <form method="GET" asp-controller="Projects" asp-action="Projects" class="flex flex-grow w-full">
        <div class="join flex flex-grow w-full">
            @if(Model.Args == null || string.IsNullOrEmpty(Model.Args.Term))
            {
                <input type="text" value="" name="term"
                    class="input input-bordered join-item flex flex-grow w-full" placeholder="Search Project" />
            }else{
                <input type="text" value="@Model.Args.Term" name="term"
                    class="input input-bordered join-item flex flex-grow w-full" placeholder="Search Project" />
            }
            <input type="submit" class="btn join-item" value="Search">
        </div>
    </form>
    
    @if(Model.Results.TotalProjects == 0)
    {
        <div align="Center">
            <h2 class="text-4xl font-bold">No Projects Available</h2>
        </div>
    }
    else
    {
        <div class="flex flex-col flex-grow w-full gap-4">
            @foreach (var item in Model.Results.Projects)
            {
                <div class="collapse collapse-arrow bg-base-200 shadow-md flex-grow w-full">
                    <input class="flex-grow w-full" type="checkbox" />
                    <div class="collapse-title text-xl font-medium flex-grow w-full">
                        <h2 class="card-title">[@item.Code] @item.Name</h2>
                    </div>
                    <div class="collapse-content">
                        <div class="grid grid-cols-3">
                            <div class="col-span-2">
                                <p>@item.Budget.ToString("C2", CultureInfo.CurrentCulture)</p>
                                <p>@item.Remarks</p>
                            </div>
                            <div class="col-span-1 grid grid-cols-3 justify-items-stretch gap-4">
                                <a asp-controller="Projects" asp-action="ProjectDetails" asp-route-projectId="@item.Id" class="btn btn-secondary">Details</a>
                                <a asp-controller="Projects" asp-action="Edit" asp-route-projectId="@item.Id" class="btn btn-info">Edit</a>
                                <a asp-controller="Projects" asp-action="ConfirmDelete" asp-route-projectId="@item.Id" class="btn btn-accent">Delete</a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        @if (Model.PageArgs.Count > 0)
        {
            <div class="flex flex-grow w-full">
                <div class="flex flex-grow w-full">
                    <div class="join flex flex-grow">
                        @for(int i=0; i<Model.PageArgs.Count; i += 1)
                        {
                            //if previous button
                            if(i==0 && Model.HasPreviousPage)
                            {
                                <a asp-controller="Projects" asp-action="Projects" asp-all-route-data="@Model.PageArgs[i]" class="join-item btn">«</a>
                                continue;
                            }
                            //if current page
                            if (Model.Args.Page.ToString() == Model.PageArgs[i]["Page"])
                            {
                                <a class="join-item btn btn-disabled">@Model.Args.ViewPage</a>
                                continue;
                            }
                            // if next button
                            if(i==Model.PageArgs.Count-1 && Model.HasNextPage)
                            {
                                <a asp-controller="Projects" asp-action="Projects" asp-all-route-data="@Model.PageArgs[i]" class="join-item btn">»</a>
                                continue;
                            }

                            <a asp-controller="Projects" asp-action="Projects" asp-all-route-data="@Model.PageArgs[i]" class="join-item btn">@Model.GetPageNumber(Model.PageArgs[i]["Page"])</a>
                        }
                    </div>
                    <div class="max-w-fit">
                        <a asp-controller="Projects" asp-action="Projects" asp-route-PageSize="5" asp-route-Term="@Model.Args.Term" class="btn btn-primary">View 5</a>
                        <a asp-controller="Projects" asp-action="Projects" asp-route-PageSize="10" asp-route-Term="@Model.Args.Term" class="btn btn-primary">View 10</a>
                    </div>
                </div>
            </div>
        }
    }
</div>
